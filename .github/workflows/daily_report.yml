name: Daily Arxiv Paper Report

on:
  schedule:
    # Run at 4:00 UTC (1:00 PM JST) Monday to Friday
    - cron: '0 4 * * 1-5'
  workflow_dispatch:  # Allow manual triggering

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        
    - name: Generate daily report
      id: generate_report
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER }}
        EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT }}
        EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
      run: |
        uv run scripts/run_daily_report.py
        # Get the report filename and set it as an output
        REPORT_DATE=$(date +%Y-%m-%d)
        REPORT_FILE="reports/arxiv_cv_report_${REPORT_DATE}.md"
        echo "report_file=${REPORT_FILE}" >> $GITHUB_OUTPUT
        echo "report_date=${REPORT_DATE}" >> $GITHUB_OUTPUT
      
    - name: Upload report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: arxiv-report
        path: reports/
        retention-days: 30
    
    # - name: Create GitHub Release
    #   if: github.event_name == 'schedule' # Only for automated runs, not manual triggers
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     name: "Arxiv CV Report ${{ steps.generate_report.outputs.report_date }}"
    #     tag_name: "report-${{ steps.generate_report.outputs.report_date }}"
    #     body_path: ${{ steps.generate_report.outputs.report_file }}
    #     draft: false
    #     prerelease: false
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      
    - name: Checkout wiki
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}.wiki
        path: wiki
        token: ${{ secrets.PERSONAL_TOKEN }}

    - name: Update wiki page
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: |
        # Create a page name for the report (no directories, use GitHub wiki naming convention)
        REPORT_PAGE_NAME="Arxiv-Report-${{ steps.generate_report.outputs.report_date }}"
        
        # Copy the markdown report to the wiki with the proper filename
        cp ${{ steps.generate_report.outputs.report_file }} "wiki/${REPORT_PAGE_NAME}.md"
        
        # Update the Home page with a link to the latest report
        cat > wiki/Home.md << EOF
        # Arxiv Reports
        
        ## Latest Report
        * [Report ${{ steps.generate_report.outputs.report_date }}](${REPORT_PAGE_NAME})
        
        ## All Reports
        See the [Reports Index](Arxiv-Reports-Index) for a list of all available reports.
        EOF
        
        # Create or update the index page
        if [ -f "wiki/Arxiv-Reports-Index.md" ]; then
          # Add the new report to the existing index
          echo -e "- [Report ${{ steps.generate_report.outputs.report_date }}](${REPORT_PAGE_NAME})" >> wiki/Arxiv-Reports-Index.md
        else
          # Create a new index page
          cat > wiki/Arxiv-Reports-Index.md << EOF
        # Arxiv Reports Index
        
        This page contains links to all Arxiv paper reports.
        
        - [Report ${{ steps.generate_report.outputs.report_date }}](${REPORT_PAGE_NAME})
        EOF
        fi
        
        # Commit and push changes to the wiki
        cd wiki
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add .
        git commit -m "Update Arxiv Report for ${{ steps.generate_report.outputs.report_date }}"
        git push
